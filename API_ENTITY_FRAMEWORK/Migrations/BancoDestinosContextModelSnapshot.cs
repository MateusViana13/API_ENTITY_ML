// <auto-generated />
using System;
using API_ENTITY_FRAMEWORK.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_ENTITY_FRAMEWORK.Migrations
{
    [DbContext(typeof(BancoDestinosContext))]
    partial class BancoDestinosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ExternalKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocalDestino")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.PontoTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<Guid>("ExternalKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.ToTable("PontoTuristicos");
                });

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.PontoTuristicoReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataReview")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int>("PontoTuristicoId")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("PontoTuristicoId");

                    b.ToTable("PontoTuristicoReviews");
                });

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.PontoTuristico", b =>
                {
                    b.HasOne("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.Destino", "Destino")
                        .WithMany("PontosTuristicos")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.PontoTuristicoReview", b =>
                {
                    b.HasOne("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.PontoTuristico", "PontoTuristico")
                        .WithMany("PontoTuristicoReviews")
                        .HasForeignKey("PontoTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PontoTuristico");
                });

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.Destino", b =>
                {
                    b.Navigation("PontosTuristicos");
                });

            modelBuilder.Entity("API_ENTITY_FRAMEWORK.Models.Banco_Destinos.PontoTuristico", b =>
                {
                    b.Navigation("PontoTuristicoReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
